#!/bin/bash

# Questo valore e' molto importante,
# permette di identificare files/directory con caratteri accentati
export LC_ALL=it_IT.utf8

TODAY=$(date +'%Y%m%d')
SOURCEPATH="/mnt"

LOCKFILE="/var/lock/backup-www.lock"
trap "rm -f ${LOCKFILE}" SIGINT SIGQUIT SIGTERM

# 28/03/2011 16:56 lcocchi: punto il backup sulla share di sequoia04
# 20/04/2011 17:41 lcocchi: ripunto il backup sul disco USB
MOUNTPOINT="/mnt/disco-usb-backup-www"
DESTPATH="$MOUNTPOINT/backup/clusterasp"
#DESTPATH="/mnt/backup_su_sequoia04"

DESTDIR="${DESTPATH}/${TODAY}"

RENICE="/usr/bin/renice"
SMARTFIND="/usr/local/bin/smartfind"

CP="/bin/cp"
CP_OPTS="-auv --parents"
IONICE="/usr/bin/ionice"

$RENICE 19 -p $$ >/dev/null
$IONICE -c3 -p $$

#backup retention
xDAYS="21"

##07/12/2011 - Fx - Ticket 630 - aggiungo l'invio del check nagios
NAGIOS_SERVER='tiglio.softecspa.it'
NSCA='/usr/sbin/send_nsca'

sab=0   # full backup
dom=1
lun=2
mar=3
mer=4
gio=5
ven=6

# 16/05/2011 - Fx - Aggiungo un file di lock per evitare che si accavallino i backup
# Rimuovo il lockfile se +vecchio di 1440 minuti (24h)
find ${LOCKFILE%/*} -name ${LOCKFILE##*/} -cmin +1440 -exec rm -f '{}' \;
if [ -e $LOCKFILE ]
then
    echo "ERROR: already runnig..." >&2;
    #Invia un critical a nagios
    echo -e "muscolo\tbackup_disco_usb_www\t2\tAlready running" | $NSCA -H $NAGIOS_SERVER
    exit 1
else
    touch $LOCKFILE
fi

if [ ! -d $DESTPATH ]
then
    mount $MOUNTPOINT
    if [ ! -d $DESTPATH ]
    then
        echo "ERROR: USB disk not mounted. Cannot mount $MOUNTPOINT..." >&2;
        #Invia un critical a nagios
        echo -e "muscolo\tbackup_disco_usb_www\t2\tERROR: USB disk not mounted. Cannot mount $MOUNTPOINT..." | $NSCA -H $NAGIOS_SERVER
        rm ${LOCKFILE}
        exit 1
    fi
fi


DAY_OF_WEEK="$(date +%a)"

case ${DAY_OF_WEEK} in
    dom)
        MTIME="--mtime=${dom}"
    LABEL="mtime${dom}"
    ;;
    lun)
        MTIME="--mtime=${lun}"
    LABEL="mtime${lun}"
    ;;
    mar)
        MTIME="--mtime=${mar}"
    LABEL="mtime${mar}"
    ;;
    mer)
        MTIME="--mtime=${mer}"
    LABEL="mtime${mer}"
    ;;
    gio)
        MTIME="--mtime=${gio}"
    LABEL="mtime${gio}"
    ;;
    ven)
        MTIME="--mtime=${ven}"
    LABEL="mtime${ven}"
    ;;
    sab)
        MTIME=""
    LABEL="full"
    ;;
    *)
        echo "ERROR: Can't match day of week" >&2; rm $LOCKFILE; echo -e "muscolo\tbackup_disco_usb_www\t2\tCan't match day of week" | $NSCA -H $NAGIOS_SERVER >/dev/null; rm $LOCKFILE; exit 1 ;;
esac

DESTDIR="${DESTDIR}-${LABEL}"
[ ! -d "${DESTDIR}" ] && mkdir -p "${DESTDIR}"

SOURCEDIR="vol_asp"
LOGFILE="${DESTDIR}/${SOURCEDIR}-backup.log"
LOGERR="${DESTDIR}/${SOURCEDIR}-backup.err"

${SMARTFIND} "${SOURCEPATH}/${SOURCEDIR}" --type=file,link ${MTIME} \
        --skipdirbyregex="/web\d+\/(phptmp|log|web\/cache)/" --skipdirlist=/usr/local/etc/backup-www.conf --df_monitor=${MOUNTPOINT} \
        -a --md5after --maxload=5 --copy-to=${DESTDIR} -v > ${LOGFILE} 2> ${LOGERR}

# Valore di uscita dello smartfind
RETVAL=$?

# mtime del find
# 11/12/2010 lcocchi: passo da 17 a 21
# 05/01/2011 lcocchi: passo da 21 a 29
# 02/02/2011 fpizzurro: passo da 29 a 36
#09/11/2011 - Fx - Aumento la retention a 60 giorni visto che ora il disco Ã¨ da 2 TB
#16/01/2012 - Fx - Scendo la retention a 50 giorni
#xDAYS="50"
DELETE_LOG="${DESTDIR}/delete-backup.log"

# la fase di cancellazione viene eseguita solo se lo smartfind esce con 0 (zero)
if [ "${RETVAL}" -ne "0" ]; then
    echo "`date` - smartfind FAILED, exit code ${RETVAL}" >> ${DELETE_LOG};
    #Invia un critical a nagios
    echo -e "muscolo\tbackup_disco_usb_www\t2\tBackup non eseguito" | $NSCA -H $NAGIOS_SERVER >/dev/null
    rm $LOCKFILE
    exit 1
fi

# 12/07/2011 Fx ticket 630 - invio un OK al check nagios. Da rivedere facendo
# si che lo smartfind logghi diversamente gli errori e che possa essere
# controllato se tutti i file sono stati copiati correttamente.
echo -e "muscolo\tbackup_disco_usb_www\t0\tUltimo backup eseguito `date +%d/%m/%Y` `date +%T`" | $NSCA -H $NAGIOS_SERVER >/dev/null

cd ${DESTPATH} 2>/dev/null || \
    { echo "`date` - cd ${DESTPATH}: FAILED" >> ${DELETE_LOG}; rm ${LOCKFILE}; exit 1; };

if [ "`pwd`" == "${DESTPATH}" ]; then
    for target in `find . -maxdepth 1 -regextype posix-egrep -regex "./[0-9]{8}-(mtime[0-9]|full)?" -type d -mtime +${xDAYS}`
    do
        TARGET="${DESTPATH}/${target#./}"
        echo "`date` - start delete ${TARGET}" >> ${DELETE_LOG}

        /bin/rm -rf "${target}" 2>/dev/null
        RETVAL=$?

        if [ "${RETVAL}" -eq "0" ]; then
            echo "`date` - end delete ${TARGET}" >> ${DELETE_LOG}
        else
            echo "`date` - delete ${TARGET} FAILED, exit code ${RETVAL}" >> ${DELETE_LOG}
        fi

        echo "`date` - MARK -" >> ${DELETE_LOG}
        unset TARGET

        sleep 180
    done
fi

rm $LOCKFILE

exit 0

# END
