#!/bin/bash

set -u

###############################################################
# Lorenzo Cocchi <lorenzo.cocchi@softecspa.it>                #
#                                                             #
# Script per identificare il device su cui e' risiede la `/`  #
#  ex.: /dev/sda, /dev/cciss/c0d0                             #
#                                                             #
# Utilizzato principalmente come Puppet fatc                  #
# NOTE: il comando `lvdisplay` richiede i privilegi di r00t   #
###############################################################

#############
# functions #
#############

die() {
    local msg="$1"
    local e=${2-1}

    echo "${msg}" >&2
    exit ${e}
}

lv_maps() {
    # identifica, dal Logical Volume name, il device del Physical Volume
    # ex.: /dev/mapper/root = /dev/sda1

    local lv_name=$1
    local fn_name="lv_maps()"

    if [ $# -ne 1 ]; then
        echo "${fn_name} usage: ${fn_name} Logical Volume name"
        return 1
    fi

    pv_device=$(
        lvdisplay ${lv_name} --maps | \
        egrep 'Physical volume' | awk '{ print $3 }' 2>/dev/null
    )

    if [ -z "${pv_device}" ]; then
        return 1
    else
        echo ${pv_device}
        return 0
    fi
}

sanitize() {
    # ripulisce il device dalle partizioni,
    # ex.: /dev/sda1 = /dev/sda

    local dev_partition=$1
    local device=""

    # sed regexp
    local ide_scsi_dev="(/dev/s[h,d][a-z]{1,})[0-9]{1,}"
    local hp_dev="(/dev/cciss/c[0-9]{1,}d[0-9]{1,})p[0-9]{1,}"
    local virt_dev="(/dev/x?vd[a-z]{1,})[0-9]{1,}"

    local fn_name="sanitize()"

    if [ $# -ne 1 ]; then
        echo "${fn_name} usage: ${fn_name} device partition, ex.: /dev/sda1"
        return 1
    fi

    # software raid
    if (echo ${dev_partition} | egrep -q '/dev/md'); then
        echo ${dev_partition}
        return 0
    fi

    # ide (pata), sata, scsi
    if (echo ${dev_partition} | egrep -q '/dev/[h,s]d'); then
        device=$(
            echo ${dev_partition} | sed -r "s#${ide_scsi_dev}#\1#g"
        )
    fi

    # hp controller
    if (echo ${dev_partition} | egrep -q '/dev/cciss'); then
        device=$(
            echo ${dev_partition} | sed -r "s#${hp_dev}#\1#g"
        )
    fi

    # virt device, ex.: kvm domU
    if (echo ${dev_partition} | egrep -q '/dev/x?vd'); then
        device=$(
            echo ${dev_partition} | sed -r "s#${virt_dev}#\1#g"
        )
    fi

    if [ -z "${device}" ] || [ "x${dev_partition}" == "x${device}" ]; then
        return 1
    else
        echo ${device}
        return 0
    fi
}

########
# main #
########

CACHE_FILE="/var/cache/$(basename $0).cache"

# se il file di cache e' + vecchio di 2h, lo rimuovo
find ${CACHE_FILE} -mmin +120 -delete 2>/dev/null

# se il file di cache esiste ed ha dimensione maggiore di 0
#  restituisco il valore da questo file
if [ -s ${CACHE_FILE} ]; then
    cat ${CACHE_FILE}
    exit $?
fi

ROOT_DEVICE="$(mount | egrep -v rootfs | egrep -w '/' | awk '{ print $1 }' 2>/dev/null)"
[ $? -ne 0 ] && die "Cannot identify root mount point"


# / su LVM
if (echo ${ROOT_DEVICE} | egrep -q '/dev/mapper'); then
    DEV=$(lv_maps ${ROOT_DEVICE})
else
    DEV=${ROOT_DEVICE}
fi

[ $? -ne 0 ] && die "Cannot lv_maps() root device"

# / su controller HP
if (echo ${DEV} | egrep -q '/dev/cciss'); then
    DEV=$(sanitize ${DEV})
fi

[ $? -ne 0 ] && die "Cannot sanitize() root device"

# se DEV non e' vuoto
if [ ! -z "${DEV}" ]; then
    echo ${DEV} > ${CACHE_FILE}
    echo ${DEV}
    exit $?
else
    die "Cannot lv_maps() root device"
fi

